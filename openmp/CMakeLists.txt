
add_executable(sipros ${SRC_LIST} ${PROJECT_SOURCE_DIR}/openmp/main.cpp)

IF(MSVC)
  target_link_libraries(sipros PUBLIC mstoolkit OpenMP::OpenMP_CXX)
  target_compile_options(sipros PUBLIC "/fp:fast" "/openmp:experimental" "/openmp:llvm" "/arch:AVX2")
  # make sure to use the static runtime library for release build
  set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} /MT")
  set(CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE} /MT")
ELSE()
  IF(BUILD_CONDA)
    target_link_libraries(sipros PUBLIC mstoolkit OpenMP::OpenMP_CXX)
    target_compile_options(sipros PUBLIC -ffast-math -march=native)
    # target_compile_options(sipros PUBLIC -ffast-math)
  ELSE()
    # this flag is not working for static link uper than gcc 11
    # target_link_libraries(sipros PUBLIC mstoolkit OpenMP::OpenMP_CXX -static -march=native)
    # target_compile_options(sipros PUBLIC -ffast-math -march=native)
    target_compile_options(sipros PUBLIC -ffast-math)
    target_link_libraries(sipros PUBLIC mstoolkit)
    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS}")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}")
    message(CMAKE_CXX_FLAGS: "${CMAKE_CXX_FLAGS}")
    set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} ${OpenMP_EXE_LINKER_FLAGS}")
    set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -static")
    message(CMAKE_EXE_LINKER_FLAGS: "${CMAKE_EXE_LINKER_FLAGS}")
  ENDIF()
ENDIF()

IF(WIN32)
  target_compile_definitions(sipros PUBLIC _NO_THERMORAW _NOSQLITE)
ElSE()
  target_compile_definitions(sipros PUBLIC GCC _FILE_OFFSET_BITS=64 _NOSQLITE)
ENDIF()
